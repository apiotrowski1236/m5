---
 - hosts: localhost
    interpreter_python = /usr/bin/python3
   gather_facts: no
   tasks:
    - name: Create VPC.
      ec2_vpc_net:
       name: Module5
       cidr_block: 10.10.0.0/16
       region: "us-east-2"
       tags:
         Module: 5
       state: present
      register: vpc
    - name: Create public subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpc.vpc.id}}"
        tags:
           Name: Module5 publicSecondAttempt
           Module: 5
        cidr: 10.10.7.0/24
        state: present
        region: "us-east-2"
        az: "us-east-2a"
      register: public_subnet1
    - name: Create second public subnet
      ec2_vpc_subnet:
         vpc_id: "{{vpc.vpc.id}}"
         tags:
           Name: Module5 publicSecondAttempt2
           Module: 5
         cidr: 10.10.8.0/24
         state: present
         region: "us-east-2"
         az: "us-east-2b"
      register: public_subnet2
    - name: Create private subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{vpc.vpc.id}}"
        tags:
           Name: Module5 private3
           Module: 5
        cidr: 10.10.5.0/24
        state: present
        region: "us-east-2"
        az: "us-east-2a"
      register: private_subnet1
    - name: Create private subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{vpc.vpc.id}}"
        tags:
           Name: Module5 private4
           Module: 5
        cidr: 10.10.4.0/24
        state: present
        region: "us-east-2"
        az: "us-east-2b"
      register: private_subnet2
    - name: Create Internet Gateway.
      ec2_vpc_igw:
        vpc_id: "{{vpc.vpc.id}}"
        state: present
        tags:
          Name: M5Gateway
      register: igw
    - name: Create public route table.
      ec2_vpc_route_table:
        vpc_id: "{{vpc.vpc.id}}"
        region: "us-east-2"
        tags:
          Name: Module5publicRouteTable
        subnets:
          - "{{ public_subnet1.subnet.id }}"
          - "{{ public_subnet2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present
    - name: Create NAT gateway.
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{ public_subnet1.subnet.id }}"
        wait: yes
        if_exist_do_not_create: true
      register: new_nat_gateway
    - name: Create private route table.
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "us-east-2"
        tags:
          Name: Module5privateRouteTable
        subnets:
          - "{{ private_subnet1.subnet.id }}"
          - "{{ private_subnet2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ new_nat_gateway.nat_gateway_id }}"
        state: present
      register: nat_route_table
    - name: Create nginx-load-balanced-servers security group
      ec2_group:
        name: m5-nginx-load-balanced-servers
        description: Allows access to nginx load-balanced servers in my IG VPC.
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
              - 443
            cidr_ip: 0.0.0.0/0
    - name: Create m5-postgres-tag security group
      ec2_group:
        name: m5-ig-postgres-tag
        description: "Postgres Tag Security Group"
        vpc_id: "{{ vpc.vpc.id }}"
      register: postgresTag
    - name: Create m5-ig-postgres security group
      ec2_group:
        name: m5-ig-postgres
        description: Allows access.
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            from_port: 5432
            to_port: 5432
            group_id: "{{ postgresTag.group_id }}"
      register: postgres
    - name: Add rules to m5-postgres-tag security group
      ec2_group:
        name: m5-ig-postgres-tag
        description: "Postgres Tag Security Group"
        vpc_id: "{{ vpc.vpc.id }}"
        rules_egress:
          - proto: tcp
            from_port: 5432
            to_port: 5432
            group_id: "{{ postgres.group_id }}"
    
    
    
             
             
    
    








    - name: Create public network acl
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: m5-public-acl
        region: "us-east-2"
        subnets: ['public_subnet1', 'public_subnet2']
        ingress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
          - [200, 'tcp', 'allow', '98.118.125.144/32', null, null, 443, 443]
          - [201, 'tcp', 'allow', '24.196.25.139/32', null, null, 443, 443]
          - [202, 'tcp', 'allow', '24.239.105.21/32', null, null, 443, 443]
          - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        egress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
          - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        state: present
    - name: Create private network acl
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: m5-private-acl
        region: "us-east-2"
        subnets: ['private_subnet1', 'private_subnet2']
        ingress:
          - [100, 'tcp', 'allow', '10.10.0.0/16', null, null, 5432, 5432 ]
          - [200, 'tcp', 'allow', '10.10.0.0/16', null, null, 443, 443]
          - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 32768, 65535]
        egress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [200, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
          - [300, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        state: present
